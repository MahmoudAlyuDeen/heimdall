/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {
    const val de_fayard_buildsrcversions_gradle_plugin: String =
        "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
                Versions.de_fayard_buildsrcversions_gradle_plugin

    /**
     * https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter/
     */
    const val retrofit2_kotlin_coroutines_adapter: String =
        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:" +
                Versions.retrofit2_kotlin_coroutines_adapter

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val androidx_arch_core_core_testing: String = "androidx.arch.core:core-testing:" +
            Versions.androidx_arch_core_core_testing

    /**
     * https://developer.android.com/studio
     */
    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
            Versions.com_android_tools_build_gradle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_fragment_ktx: String = "android.arch.navigation:navigation-fragment-ktx:" +
            Versions.android_arch_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_safe_args_gradle_plugin: String =
        "android.arch.navigation:navigation-safe-args-gradle-plugin:" + Versions.android_arch_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_ui_ktx: String = "android.arch.navigation:navigation-ui-ktx:" +
            Versions.android_arch_navigation

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val androidx_core_core_ktx: String = "androidx.core:core-ktx:" +
            Versions.androidx_core_core_ktx

    /**
     * https://developer.android.com/testing
     */
    const val espresso_contrib: String = "androidx.test.espresso:espresso-contrib:" +
            Versions.androidx_test_espresso

    /**
     * https://developer.android.com/testing
     */
    const val espresso_core: String = "androidx.test.espresso:espresso-core:" +
            Versions.androidx_test_espresso

    /**
     * https://developer.android.com/testing
     */
    const val espresso_intents: String = "androidx.test.espresso:espresso-intents:" +
            Versions.androidx_test_espresso

    /**
     * https://github.com/square/retrofit/
     */
    const val converter_moshi: String = "com.squareup.retrofit2:converter-moshi:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/
     */
    const val retrofit: String =
        "com.squareup.retrofit2:retrofit:" + Versions.com_squareup_retrofit2

    /**
     * https://github.com/Kotlin/kotlinx.coroutines
     */
    const val kotlinx_coroutines_android: String =
        "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/Kotlin/kotlinx.coroutines
     */
    const val kotlinx_coroutines_core: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:" +
            Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/Kotlin/kotlinx.coroutines
     */
    const val kotlinx_coroutines_test: String = "org.jetbrains.kotlinx:kotlinx-coroutines-test:" +
            Versions.org_jetbrains_kotlinx

    const val databinding_adapters: String = "androidx.databinding:databinding-adapters:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/studio
     */
    const val databinding_common: String = "androidx.databinding:databinding-common:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/studio
     */
    const val databinding_compiler: String = "androidx.databinding:databinding-compiler:" +
            Versions.androidx_databinding

    const val databinding_runtime: String = "androidx.databinding:databinding-runtime:" +
            Versions.androidx_databinding

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
            Versions.lifecycle_extensions

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_android_extensions: String =
        "org.jetbrains.kotlin:kotlin-android-extensions:" +
                Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_android_extensions_runtime: String =
        "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_annotation_processing_gradle: String =
        "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_stdlib_jdk7: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://github.com/square/moshi
     */
    const val moshi: String = "com.squareup.moshi:moshi:" + Versions.com_squareup_moshi

    /**
     * https://github.com/square/moshi
     */
    const val moshi_kotlin: String =
        "com.squareup.moshi:moshi-kotlin:" + Versions.com_squareup_moshi

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val paging_runtime_ktx: String = "androidx.paging:paging-runtime-ktx:" +
            Versions.paging_runtime_ktx

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val fragment: String = "androidx.fragment:fragment:" + Versions.androidx_fragment

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val fragment_testing: String = "androidx.fragment:fragment-testing:" +
            Versions.androidx_fragment

    /**
     * http://tools.android.com
     */
    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
            Versions.constraintlayout

    /**
     * http://robolectric.org
     */
    const val org_robolectric_annotations: String = "org.robolectric:annotations:" +
            Versions.org_robolectric

    /**
     * http://robolectric.org
     */
    const val robolectric: String = "org.robolectric:robolectric:" + Versions.org_robolectric

    /**
     * https://github.com/MikeOrtiz/TouchImageView
     */
    const val touchimageview: String =
        "com.github.MikeOrtiz:TouchImageView:" + Versions.touchimageview

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val room_compiler: String = "androidx.room:room-compiler:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val room_runtime: String = "androidx.room:room-runtime:" + Versions.androidx_room

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_core: String = "androidx.test:core:" + Versions.androidx_test

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_core_ktx: String = "androidx.test:core-ktx:" + Versions.androidx_test

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    /**
     * https://developer.android.com/studio
     */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * http://jacoco.org
     */
    const val org_jacoco_agent: String = "org.jacoco:org.jacoco.agent:" + Versions.org_jacoco

    /**
     * http://jacoco.org
     */
    const val org_jacoco_ant: String = "org.jacoco:org.jacoco.ant:" + Versions.org_jacoco

    /**
     * https://developer.android.com/testing
     */
    const val junit_ktx: String = "androidx.test.ext:junit-ktx:" + Versions.junit_ktx

    /**
     * http://mockk.io
     */
    const val mockk: String = "io.mockk:mockk:" + Versions.io_mockk

    /**
     * http://mockk.io
     */
    const val mockk_android: String = "io.mockk:mockk-android:" + Versions.io_mockk

    const val koin_android_viewmodel: String =
        "org.koin:koin-android-viewmodel:" + Versions.org_koin

    const val koin_test: String = "org.koin:koin-test:" + Versions.org_koin

    /**
     * https://developer.android.com/studio
     */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * https://github.com/bumptech/glide
     */
    const val glide: String = "com.github.bumptech.glide:glide:" + Versions.glide

    /**
     * http://junit.org
     */
    const val junit: String = "junit:junit:" + Versions.junit

    /**
     * http://github.com/google/truth
     */
    const val truth: String = "com.google.truth:truth:" + Versions.truth
}
