apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs'


android {
    compileSdkVersion 28
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.afterapps.heimdall"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
    dataBinding {
        enabled = true
    }
    buildTypes.each {
        it.buildConfigField 'String', 'ShutterstockApiToken', token
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        testInstrumentationRunner "com.afterapps.heimdall.TestAppJUnitRunner"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"

    // Koin
    implementation "org.koin:koin-android-viewmodel:$version_koin"

    // AndroidX Fragment
    implementation "androidx.fragment:fragment:$version_fragment"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Room
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$version_paging"

    // Touch ImageView
    implementation "com.github.MikeOrtiz:TouchImageView:$version_touch_image_view"

    // Unit testing
    testImplementation "io.mockk:mockk:$version_mockk"
    testImplementation "junit:junit:$version_j_unit"
    testImplementation "androidx.arch.core:core-testing:$version_androidx_arch_testing"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    testImplementation "org.robolectric:robolectric:$version_robolectric"
    testImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    testImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"
    testImplementation "androidx.test.espresso:espresso-intents:$version_espresso"
    testImplementation "com.google.truth:truth:$version_truth"


    // Android unit tests
    androidTestImplementation("io.mockk:mockk-android:$version_mockk") {
        // kotlin-reflect is a transitive dependency of moshi-kotlin with a different version
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    androidTestImplementation "junit:junit:$version_j_unit"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    androidTestImplementation "com.google.truth:truth:$version_truth"

    // AndroidX instrumental testing
    androidTestImplementation "androidx.test:core-ktx:$version_android_x_test_core"
    implementation "androidx.test.ext:junit-ktx:$version_android_x_test_ktx"
    androidTestImplementation "androidx.test:rules:$version_android_x_test_rules"
    androidTestImplementation "androidx.arch.core:core-testing:$version_androidx_arch_testing"
    androidTestImplementation "org.robolectric:annotations:$version_robolectric"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"
    implementation "androidx.fragment:fragment-testing:$version_fragment"
    implementation "androidx.test:core:$version_android_x_test_core"


    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$version_android_x_test_core"
    testImplementation "androidx.test.ext:junit-ktx:$version_android_x_test_ktx"
    testImplementation "androidx.test:rules:$version_android_x_test_rules"
}
